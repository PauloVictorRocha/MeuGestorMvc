// <auto-generated />
using System;
using MeuGestorMvc.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MeuGestorMvc.Migrations
{
    [DbContext(typeof(MeuGestorMvcContext))]
    partial class MeuGestorMvcContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("MeuGestorMvc.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("AddressComplement")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Contact")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("County")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CpfCnpj")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Client");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Client");
                });

            modelBuilder.Entity("MeuGestorMvc.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("InversorConnection")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("InversorManufacturer")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("InversorModel")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("InversorPower")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("InversorQuantity")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ModuleManufacturer")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ModuleModel")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ModulePower")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ModuleQuantity")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ProjectArt")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("ProjectType")
                        .HasColumnType("int");

                    b.Property<int>("ProjectUcId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("ProjectUcId");

                    b.ToTable("Project");
                });

            modelBuilder.Entity("MeuGestorMvc.Models.ProjectsRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("EditedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FinishedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("ProjectsRecord");
                });

            modelBuilder.Entity("MeuGestorMvc.Models.ConsumerUnit", b =>
                {
                    b.HasBaseType("MeuGestorMvc.Models.Client");

                    b.Property<string>("Connection")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("GeneralProtection")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("HolderId")
                        .HasColumnType("int");

                    b.Property<string>("PowerCompany")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UC")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasIndex("HolderId");

                    b.HasDiscriminator().HasValue("ConsumerUnit");
                });

            modelBuilder.Entity("MeuGestorMvc.Models.Project", b =>
                {
                    b.HasOne("MeuGestorMvc.Models.Client", "Client")
                        .WithMany("Projects")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MeuGestorMvc.Models.ConsumerUnit", "ProjectUc")
                        .WithMany()
                        .HasForeignKey("ProjectUcId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("ProjectUc");
                });

            modelBuilder.Entity("MeuGestorMvc.Models.ProjectsRecord", b =>
                {
                    b.HasOne("MeuGestorMvc.Models.Project", "Project")
                        .WithMany("Records")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("MeuGestorMvc.Models.ConsumerUnit", b =>
                {
                    b.HasOne("MeuGestorMvc.Models.Client", "Holder")
                        .WithMany()
                        .HasForeignKey("HolderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Holder");
                });

            modelBuilder.Entity("MeuGestorMvc.Models.Client", b =>
                {
                    b.Navigation("Projects");
                });

            modelBuilder.Entity("MeuGestorMvc.Models.Project", b =>
                {
                    b.Navigation("Records");
                });
#pragma warning restore 612, 618
        }
    }
}
